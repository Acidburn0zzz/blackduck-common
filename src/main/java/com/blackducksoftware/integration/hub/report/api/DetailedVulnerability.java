package com.blackducksoftware.integration.hub.report.api;

import java.util.UUID;

import org.joda.time.DateTime;

/**
 * A vulnerability with remediation metadata.
 *
 * The consumer version information is not included.
 *
 */
public class DetailedVulnerability {
    private final UUID producerProjectId;

    private final UUID producerVersionId;

    private final String producerProjectName;

    private final String producerVersion;

    private final String vulnerabilityId;

    private final String description;

    private final DateTime createdDate;

    private final DateTime updatedDate;

    private final Double baseScore;

    private final Double exploitabilitySubscore;

    private final Double impactSubscore;

    private final String vulnerabilitySource;

    private final String remediationStatus;

    private final DateTime remediationTargetAt;

    private final DateTime remediationActualAt;

    private final String remediationComment;

    private final DateTime remediationCreatedAt;

    private final DateTime remediationUpdatedAt;

    public DetailedVulnerability(UUID producerProjectId,
            UUID producerVersionId,
            String producerProjectName,
            String producerVersion,
            String vulnerabilityId,
            String description,
            DateTime createdDate,
            DateTime updatedDate,
            Double baseScore,
            Double exploitabilitySubscore,
            Double impactSubscore,
            String vulnerabilitySource,
            String remediationStatus,
            DateTime remediationTargetAt,
            DateTime remediationActualAt,
            String remediationComment,
            DateTime remediationCreatedAt,
            DateTime remediationUpdatedAt) {
        this.producerProjectId = producerProjectId;
        this.producerVersionId = producerVersionId;
        this.producerProjectName = producerProjectName;
        this.producerVersion = producerVersion;
        this.vulnerabilityId = vulnerabilityId;
        this.description = description;
        this.createdDate = createdDate;
        this.updatedDate = updatedDate;
        this.baseScore = baseScore;
        this.exploitabilitySubscore = exploitabilitySubscore;
        this.impactSubscore = impactSubscore;
        this.vulnerabilitySource = vulnerabilitySource;
        this.remediationStatus = remediationStatus;
        this.remediationTargetAt = remediationTargetAt;
        this.remediationActualAt = remediationActualAt;
        this.remediationComment = remediationComment;
        this.remediationCreatedAt = remediationCreatedAt;
        this.remediationUpdatedAt = remediationUpdatedAt;
    }

    public UUID getProducerProjectId() {
        return producerProjectId;
    }

    public UUID getProducerVersionId() {
        return producerVersionId;
    }

    public String getProducerProjectName() {
        return producerProjectName;
    }

    public String getProducerVersion() {
        return producerVersion;
    }

    public String getVulnerabilityId() {
        return vulnerabilityId;
    }

    public String getDescription() {
        return description;
    }

    public DateTime getCreatedDate() {
        return createdDate;
    }

    public DateTime getUpdatedDate() {
        return updatedDate;
    }

    public Double getBaseScore() {
        return baseScore;
    }

    public Double getExploitabilitySubscore() {
        return exploitabilitySubscore;
    }

    public Double getImpactSubscore() {
        return impactSubscore;
    }

    public String getVulnerabilitySource() {
        return vulnerabilitySource;
    }

    public String getRemediationStatus() {
        return remediationStatus;
    }

    public DateTime getRemediationTargetAt() {
        return remediationTargetAt;
    }

    public DateTime getRemediationActualAt() {
        return remediationActualAt;
    }

    public String getRemediationComment() {
        return remediationComment;
    }

    public DateTime getRemediationCreatedAt() {
        return remediationCreatedAt;
    }

    public DateTime getRemediationUpdatedAt() {
        return remediationUpdatedAt;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((baseScore == null) ? 0 : baseScore.hashCode());
        result = prime * result + ((createdDate == null) ? 0 : createdDate.hashCode());
        result = prime * result + ((description == null) ? 0 : description.hashCode());
        result = prime * result + ((exploitabilitySubscore == null) ? 0 : exploitabilitySubscore.hashCode());
        result = prime * result + ((impactSubscore == null) ? 0 : impactSubscore.hashCode());
        result = prime * result + ((producerProjectId == null) ? 0 : producerProjectId.hashCode());
        result = prime * result + ((producerProjectName == null) ? 0 : producerProjectName.hashCode());
        result = prime * result + ((producerVersion == null) ? 0 : producerVersion.hashCode());
        result = prime * result + ((producerVersionId == null) ? 0 : producerVersionId.hashCode());
        result = prime * result + ((remediationActualAt == null) ? 0 : remediationActualAt.hashCode());
        result = prime * result + ((remediationComment == null) ? 0 : remediationComment.hashCode());
        result = prime * result + ((remediationCreatedAt == null) ? 0 : remediationCreatedAt.hashCode());
        result = prime * result + ((remediationStatus == null) ? 0 : remediationStatus.hashCode());
        result = prime * result + ((remediationTargetAt == null) ? 0 : remediationTargetAt.hashCode());
        result = prime * result + ((remediationUpdatedAt == null) ? 0 : remediationUpdatedAt.hashCode());
        result = prime * result + ((updatedDate == null) ? 0 : updatedDate.hashCode());
        result = prime * result + ((vulnerabilityId == null) ? 0 : vulnerabilityId.hashCode());
        result = prime * result + ((vulnerabilitySource == null) ? 0 : vulnerabilitySource.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        DetailedVulnerability other = (DetailedVulnerability) obj;
        if (baseScore == null) {
            if (other.baseScore != null) {
                return false;
            }
        } else if (!baseScore.equals(other.baseScore)) {
            return false;
        }
        if (createdDate == null) {
            if (other.createdDate != null) {
                return false;
            }
        } else if (!createdDate.equals(other.createdDate)) {
            return false;
        }
        if (description == null) {
            if (other.description != null) {
                return false;
            }
        } else if (!description.equals(other.description)) {
            return false;
        }
        if (exploitabilitySubscore == null) {
            if (other.exploitabilitySubscore != null) {
                return false;
            }
        } else if (!exploitabilitySubscore.equals(other.exploitabilitySubscore)) {
            return false;
        }
        if (impactSubscore == null) {
            if (other.impactSubscore != null) {
                return false;
            }
        } else if (!impactSubscore.equals(other.impactSubscore)) {
            return false;
        }
        if (producerProjectId == null) {
            if (other.producerProjectId != null) {
                return false;
            }
        } else if (!producerProjectId.equals(other.producerProjectId)) {
            return false;
        }
        if (producerProjectName == null) {
            if (other.producerProjectName != null) {
                return false;
            }
        } else if (!producerProjectName.equals(other.producerProjectName)) {
            return false;
        }
        if (producerVersion == null) {
            if (other.producerVersion != null) {
                return false;
            }
        } else if (!producerVersion.equals(other.producerVersion)) {
            return false;
        }
        if (producerVersionId == null) {
            if (other.producerVersionId != null) {
                return false;
            }
        } else if (!producerVersionId.equals(other.producerVersionId)) {
            return false;
        }
        if (remediationActualAt == null) {
            if (other.remediationActualAt != null) {
                return false;
            }
        } else if (!remediationActualAt.equals(other.remediationActualAt)) {
            return false;
        }
        if (remediationComment == null) {
            if (other.remediationComment != null) {
                return false;
            }
        } else if (!remediationComment.equals(other.remediationComment)) {
            return false;
        }
        if (remediationCreatedAt == null) {
            if (other.remediationCreatedAt != null) {
                return false;
            }
        } else if (!remediationCreatedAt.equals(other.remediationCreatedAt)) {
            return false;
        }
        if (remediationStatus == null) {
            if (other.remediationStatus != null) {
                return false;
            }
        } else if (!remediationStatus.equals(other.remediationStatus)) {
            return false;
        }
        if (remediationTargetAt == null) {
            if (other.remediationTargetAt != null) {
                return false;
            }
        } else if (!remediationTargetAt.equals(other.remediationTargetAt)) {
            return false;
        }
        if (remediationUpdatedAt == null) {
            if (other.remediationUpdatedAt != null) {
                return false;
            }
        } else if (!remediationUpdatedAt.equals(other.remediationUpdatedAt)) {
            return false;
        }
        if (updatedDate == null) {
            if (other.updatedDate != null) {
                return false;
            }
        } else if (!updatedDate.equals(other.updatedDate)) {
            return false;
        }
        if (vulnerabilityId == null) {
            if (other.vulnerabilityId != null) {
                return false;
            }
        } else if (!vulnerabilityId.equals(other.vulnerabilityId)) {
            return false;
        }
        if (vulnerabilitySource == null) {
            if (other.vulnerabilitySource != null) {
                return false;
            }
        } else if (!vulnerabilitySource.equals(other.vulnerabilitySource)) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        builder.append("DetailedVulnerability [producerProjectId=");
        builder.append(producerProjectId);
        builder.append(", producerVersionId=");
        builder.append(producerVersionId);
        builder.append(", producerProjectName=");
        builder.append(producerProjectName);
        builder.append(", producerVersion=");
        builder.append(producerVersion);
        builder.append(", vulnerabilityId=");
        builder.append(vulnerabilityId);
        builder.append(", description=");
        builder.append(description);
        builder.append(", createdDate=");
        builder.append(createdDate);
        builder.append(", updatedDate=");
        builder.append(updatedDate);
        builder.append(", baseScore=");
        builder.append(baseScore);
        builder.append(", exploitabilitySubscore=");
        builder.append(exploitabilitySubscore);
        builder.append(", impactSubscore=");
        builder.append(impactSubscore);
        builder.append(", vulnerabilitySource=");
        builder.append(vulnerabilitySource);
        builder.append(", remediationStatus=");
        builder.append(remediationStatus);
        builder.append(", remediationTargetAt=");
        builder.append(remediationTargetAt);
        builder.append(", remediationActualAt=");
        builder.append(remediationActualAt);
        builder.append(", remediationComment=");
        builder.append(remediationComment);
        builder.append(", remediationCreatedAt=");
        builder.append(remediationCreatedAt);
        builder.append(", remediationUpdatedAt=");
        builder.append(remediationUpdatedAt);
        builder.append("]");
        return builder.toString();
    }

}
