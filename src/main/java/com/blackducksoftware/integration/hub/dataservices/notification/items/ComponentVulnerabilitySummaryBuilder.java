/*******************************************************************************
 * Copyright (C) 2016 Black Duck Software, Inc.
 * http://www.blackducksoftware.com/
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *******************************************************************************/
package com.blackducksoftware.integration.hub.dataservices.notification.items;

import java.util.ArrayList;
import java.util.List;

import com.blackducksoftware.integration.hub.api.vulnerabilities.SeverityEnum;
import com.blackducksoftware.integration.hub.api.vulnerabilities.VulnerabilityItem;

public class ComponentVulnerabilitySummaryBuilder {

	private String componentName;
	private String componentVersion;
	private List<VulnerabilityItem> vulnerabilityList;

	public ComponentVulnerabilitySummaryBuilder() {
		componentName = "";
		componentVersion = "";
		vulnerabilityList = new ArrayList<>();
	}

	public String getComponentName() {
		return componentName;
	}

	public void setComponentName(final String componentName) {
		this.componentName = componentName;
	}

	public String getComponentVersion() {
		return componentVersion;
	}

	public void setComponentVersion(final String componentVersion) {
		this.componentVersion = componentVersion;
	}

	public List<VulnerabilityItem> getVulnerabilityList() {
		return vulnerabilityList;
	}

	public void setVulnerabilityList(final List<VulnerabilityItem> vulnerabilityList) {
		this.vulnerabilityList = vulnerabilityList;
	}

	public ComponentVulnerabilitySummary build() {
		int total = 0;
		int highCount = 0;
		int mediumCount = 0;
		int lowCount = 0;
		if (vulnerabilityList != null && vulnerabilityList.size() > 0) {
			total = vulnerabilityList.size();
			for (final VulnerabilityItem item : vulnerabilityList) {
				final SeverityEnum severity = SeverityEnum.getSeverityEnum(item.getSeverity());
				switch (severity) {
				case HIGH: {
					highCount++;
					break;
				}
				case MEDIUM: {
					mediumCount++;
					break;
				}
				case LOW: {
					lowCount++;
					break;
				}
				default: {
					// do nothing
				}
				}
			}
		}

		return new ComponentVulnerabilitySummary(componentName, componentVersion, highCount, mediumCount, lowCount,
				total);
	}
}
