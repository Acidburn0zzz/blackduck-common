/*
 * Copyright (C) 2016 Black Duck Software Inc.
 * http://www.blackducksoftware.com/
 * All rights reserved.
 *
 * This software is the confidential and proprietary information of
 * Black Duck Software ("Confidential Information"). You shall not
 * disclose such Confidential Information and shall use it only in
 * accordance with the terms of the license agreement you entered into
 * with Black Duck Software.
 */
package com.blackducksoftware.integration.hub.dataservices.vulnerability;

import java.io.IOException;
import java.net.URISyntaxException;
import java.util.List;

import com.blackducksoftware.integration.hub.api.HubRestService;
import com.blackducksoftware.integration.hub.api.component.ComponentItem;
import com.blackducksoftware.integration.hub.api.component.ComponentRestService;
import com.blackducksoftware.integration.hub.api.component.id.ComponentIdItem;
import com.blackducksoftware.integration.hub.api.component.id.ComponentIdRestService;
import com.blackducksoftware.integration.hub.api.component.version.ComponentVersion;
import com.blackducksoftware.integration.hub.api.component.version.ComponentVersionRestService;
import com.blackducksoftware.integration.hub.api.vulnerabilities.VulnerabilityItem;
import com.blackducksoftware.integration.hub.api.vulnerabilities.VulnerabilityRestService;
import com.blackducksoftware.integration.hub.exception.BDRestException;
import com.blackducksoftware.integration.hub.exception.UnexpectedHubResponseException;
import com.blackducksoftware.integration.hub.rest.RestConnection;

public class VulnerabilityDataService extends HubRestService {
    private final ComponentRestService componentRestService;

    private final ComponentVersionRestService componentVersionRestService;

    private final ComponentIdRestService componentIdRestService;

    private final VulnerabilityRestService vulnerabilityRestService;

    public VulnerabilityDataService(RestConnection restConnection, ComponentRestService componentRestService, ComponentVersionRestService componentVersionRestService,
            ComponentIdRestService componentIdRestService, VulnerabilityRestService vulnerabilityRestService) {
        super(restConnection);
        this.componentRestService = componentRestService;
        this.componentVersionRestService = componentVersionRestService;
        this.componentIdRestService = componentIdRestService;
        this.vulnerabilityRestService = vulnerabilityRestService;
    }

    public ComponentItem getComponentWithId(final String id, final String groupId, String artifactId, String version)
            throws IOException, BDRestException, URISyntaxException, UnexpectedHubResponseException {
        final List<ComponentItem> componentList = componentRestService.getAllComponents(id, groupId,
                artifactId, version);
        if (componentList.size() > 0) {
            return componentList.get(0);
        }
        throw new UnexpectedHubResponseException();
    }

    public List<VulnerabilityItem> getVulnsFromComponent(final String id, final String groupId, String artifactId, String version)
            throws IOException, URISyntaxException, BDRestException, UnexpectedHubResponseException {
        final ComponentItem component = getComponentWithId(id, groupId, artifactId, version);
        if (component == null) {
            return null;
        }
        final String componentVersionURL = component.getVersion();
        if (componentVersionURL != null) {
            final ComponentVersion componentVersion = componentVersionRestService.getItem(componentVersionURL);
            final String vulnURL = componentVersion.getLink("vulnerabilities");
            final List<VulnerabilityItem> vulnItems = vulnerabilityRestService
                    .getComponentVersionVulnerabilities(vulnURL);
            return vulnItems;
        }
        final String componentURL = component.getComponent();
        if (componentURL != null) {
            final ComponentIdItem idComponent = componentIdRestService.getComponent(componentURL);
            final String vulnURL = idComponent.getLink("vulnerabilities");
            final List<VulnerabilityItem> vulnItems = vulnerabilityRestService
                    .getComponentVersionVulnerabilities(vulnURL);
            return vulnItems;
        }
        return null;
    }

}
