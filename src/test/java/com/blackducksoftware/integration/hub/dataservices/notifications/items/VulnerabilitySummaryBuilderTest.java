package com.blackducksoftware.integration.hub.dataservices.notifications.items;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;

import java.util.ArrayList;
import java.util.List;

import org.junit.Test;

import com.blackducksoftware.integration.hub.api.vulnerabilities.SeverityEnum;
import com.blackducksoftware.integration.hub.api.vulnerabilities.VulnerabilityItem;
import com.blackducksoftware.integration.hub.dataservices.notification.items.ComponentVulnerabilitySummary;
import com.blackducksoftware.integration.hub.dataservices.notification.items.ComponentVulnerabilitySummaryBuilder;
import com.blackducksoftware.integration.hub.meta.MetaInformation;

public class VulnerabilitySummaryBuilderTest {

	private final static int HIGHCOUNT = 5;
	private final static int MEDIUMCOUNT = 1;
	private final static int LOWCOUNT = 3;

	private List<VulnerabilityItem> createVulnerabilityList() {
		final List<VulnerabilityItem> itemList = new ArrayList<>();
		final MetaInformation meta = null;
		for (int index = 0; index < HIGHCOUNT; index++) {
			itemList.add(new VulnerabilityItem(meta, "", "", "", "", 0, 0, 0, "", SeverityEnum.HIGH.name(), "", "", "",
					"", "", "", ""));
		}
		for (int index = 0; index < MEDIUMCOUNT; index++) {
			itemList.add(new VulnerabilityItem(meta, "", "", "", "", 0, 0, 0, "", SeverityEnum.MEDIUM.name(), "", "",
					"", "", "", "", ""));
		}
		for (int index = 0; index < LOWCOUNT; index++) {
			itemList.add(new VulnerabilityItem(meta, "", "", "", "", 0.0, 0.0, 0.0, "", SeverityEnum.LOW.name(), "", "",
					"", "", "", "", ""));
		}
		return itemList;
	}

	@Test
	public void testConstructor() {
		final ComponentVulnerabilitySummaryBuilder builder = new ComponentVulnerabilitySummaryBuilder();
		assertNotNull(builder);
	}

	@Test
	public void testSetters() {
		final String componentName = "component";
		final String componentVersion = "version";
		final List<VulnerabilityItem> itemList = createVulnerabilityList();
		final ComponentVulnerabilitySummaryBuilder builder = new ComponentVulnerabilitySummaryBuilder();
		builder.setComponentName(componentName);
		builder.setComponentVersion(componentVersion);
		builder.setVulnerabilityList(itemList);

		assertEquals(componentName, builder.getComponentName());
		assertEquals(componentVersion, builder.getComponentVersion());
		assertEquals(itemList, builder.getVulnerabilityList());
	}

	@Test
	public void testBuild() {
		final String componentName = "component";
		final String componentVersion = "version";
		final List<VulnerabilityItem> itemList = createVulnerabilityList();
		final ComponentVulnerabilitySummaryBuilder builder = new ComponentVulnerabilitySummaryBuilder();
		builder.setComponentName(componentName);
		builder.setComponentVersion(componentVersion);
		builder.setVulnerabilityList(itemList);

		final ComponentVulnerabilitySummary summary = builder.build();
		assertEquals(componentName, summary.getComponentName());
		assertEquals(componentVersion, summary.getComponentVersion());
		assertEquals(HIGHCOUNT, summary.getHighCount());
		assertEquals(MEDIUMCOUNT, summary.getMediumCount());
		assertEquals(LOWCOUNT, summary.getLowCount());
		assertEquals(itemList.size(), summary.getTotalCount());
	}
}
